{"version":3,"file":"static/js/435.489e5da2.chunk.js","mappings":"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","sources":["components/FilmCardDetail/FilmCardDetail.styled.js","components/FilmCardDetail/FilmCardDetail.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmCard = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const FilmInfoWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nexport const FilmTitle = styled.h1`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: 5px;\n  object-fit: cover;\n  width: 395px;\n  height: 574px;\n`;\n\nexport const FilmInfoTitle = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const FilmInfoDesc = styled.span`\n  font-size: 15px;\n  font-weight: 400;\n`;\n\nexport const FilmInfoOverview = styled.p`\n  font-size: 15px;\n  margin-bottom: 10px;\n  font-weight: 400;\n  text-align: justify;\n  width: 450px;\n`;\n","import {\n  getPosterFilm,\n  getGenres,\n  getDate,\n  getPecentageValue,\n} from 'services/fetchApi';\n\nimport {\n  FilmCard,\n  FilmInfoWrapper,\n  FilmPoster,\n  FilmTitle,\n  FilmInfoTitle,\n  FilmInfoDesc,\n  FilmInfoOverview,\n} from './FilmCardDetail.styled';\n\nimport PropTypes from 'prop-types';\n\nexport const FilmCardDetail = ({ movie }) => {\n  const { title, poster_path, release_date, overview, genres, vote_average } =\n    movie;\n  return (\n    <FilmCard>\n      <FilmPoster src={getPosterFilm(poster_path)} alt={title} />\n      <FilmInfoWrapper>\n        <FilmTitle>\n          {title} ({getDate(release_date)})\n        </FilmTitle>\n        <FilmInfoTitle>\n          User Score:{' '}\n          <FilmInfoDesc>\n            {vote_average && getPecentageValue(vote_average)}\n          </FilmInfoDesc>\n        </FilmInfoTitle>\n        <FilmInfoTitle>Overview: </FilmInfoTitle>\n        <FilmInfoOverview>{overview}</FilmInfoOverview>\n        <FilmInfoTitle>\n          Genres: <FilmInfoDesc>{getGenres(genres)}</FilmInfoDesc>\n        </FilmInfoTitle>\n      </FilmInfoWrapper>\n    </FilmCard>\n  );\n};\n\nFilmCardDetail.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n    vote_average: PropTypes.number,\n  }),\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AdditionalInfoWrapper = styled.div`\n  margin: 20px auto;\n  margin-top: 0;\n  text-align: center;\n`;\n\nexport const AdditionalInfoTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n`;\n\nexport const AdditionalItem = styled(NavLink)`\n  padding: 8px 25px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  display: block;\n  min-width: 100px;\n  background-color: lightgray;\n  transition: background-color 350ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active,\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import {\n  AdditionalInfoWrapper,\n  AdditionalInfoList,\n  AdditionalInfoTitle,\n  AdditionalItem,\n} from './AdditionalInfo.styled';\n\nimport PropTypes from 'prop-types';\n\n\nexport const AdditionalInfo = ({ backLinkHref }) => {\n  return (\n    <AdditionalInfoWrapper>\n      <AdditionalInfoTitle>Additional infomation</AdditionalInfoTitle>\n      <AdditionalInfoList>\n        <li>\n          <AdditionalItem to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </AdditionalItem>\n        </li>\n        <li>\n          <AdditionalItem to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </AdditionalItem>\n        </li>\n      </AdditionalInfoList>\n    </AdditionalInfoWrapper>\n  );\n};\n\nAdditionalInfo.propTypes = {\n    backLinkHref: PropTypes.shape({\n        state: PropTypes.shape({}),\n    }),\n}\n","import styled from 'styled-components';\nimport { Link} from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 0 0 60px 0;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 10px;\n  background-color: #93dbb2;\n  margin-bottom: 20px;\n  max-width: 110px;\n  border-radius: 4px;\n  font-weight: bold;\n  color: #000;\n`;\n\n\n\n\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { MdArrowBackIosNew } from 'react-icons/md';\nimport { Loader } from 'components/Loader/Loader';\nimport { FilmCardDetail } from 'components/FilmCardDetail/FilmCardDetail';\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { getFilmById } from 'services/fetchApi';\nimport { Outlet } from 'react-router-dom';\nimport { LinkStyled, Section } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieInfo = async () => {\n      try {\n        const movieInfo = await getFilmById(movieId);\n        setMovie(movieInfo);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        console.log('Error in MovieDetails', error);\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  if (movie.lenght === 0) {\n    return;\n  }\n\n  return (\n    <main>\n      {!isLoading && (\n        <Section>\n          <LinkStyled to={backLinkHref}>\n            <MdArrowBackIosNew size={24} />\n            Go back\n          </LinkStyled>\n          <FilmCardDetail movie={movie} />\n          <AdditionalInfo backLinkHref={backLinkHref} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Section>\n      )}\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '579a7483bae7d6a5a25eb4c1ddded2cf';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getFilmById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    const movieInfo = response.data;\n    return movieInfo;\n  } catch (error) {\n    console.log('Error in getFilmById', error);\n  }\n};\n\nexport const getFilmByKeyword = async movie => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const searchMovie = response.data.results;\n    return searchMovie;\n  } catch (error) {\n    console.log('Error in getFilmByKeyword', error);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.log('Error in getFilmCast', error);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log('Error in getFilmReviews', error);\n  }\n};\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport function getPosterFilm(posterPath) {\n    if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n    return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\n\nexport function getGenres(genres) {\n    if (!genres) {\n      return;\n    }\n    const genresName = genres.map(genre => genre.name);\n    return genresName.join(\", \");\n}\n\nexport function sliceVoteAverage(voteAverage) {\n    const sliceVoteAverage = parseFloat(voteAverage.toFixed(1));\n    return sliceVoteAverage;\n}\n\nexport function getPecentageValue(voteAverage) {\n    if (!voteAverage) {\n        return;\n    }\n    const sliceVote = sliceVoteAverage(voteAverage);\n    const percentValue = sliceVote / 10 * 100;\n    const percent = parseFloat(percentValue.toFixed(1));\n    return `${percent}%`;\n}\n"],"names":["FilmCard","styled","FilmInfoWrapper","FilmTitle","FilmPoster","FilmInfoTitle","FilmInfoDesc","FilmInfoOverview","FilmCardDetail","movie","title","poster_path","release_date","overview","genres","vote_average","src","getPosterFilm","alt","getDate","getPecentageValue","getGenres","AdditionalInfoWrapper","AdditionalInfoTitle","AdditionalInfoList","AdditionalItem","NavLink","AdditionalInfo","backLinkHref","to","state","from","Section","LinkStyled","Link","movieId","useParams","useState","setMovie","isLoading","setIsLoading","useLocation","useEffect","getMovieInfo","getFilmById","movieInfo","console","log","lenght","size","Suspense","fallback","Loader","API_KEY","axios","response","data","getFilmByKeyword","searchMovie","results","getFilmCast","cast","getFilmReviews","reviews","date","split","posterPath","map","genre","name","join","sliceVoteAverage","voteAverage","parseFloat","toFixed","sliceVote","percent"],"sourceRoot":""}