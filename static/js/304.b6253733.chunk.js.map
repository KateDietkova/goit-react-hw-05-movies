{"version":3,"file":"static/js/304.b6253733.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  display: grid;\n  justify-content: center;\n  grid-auto-rows: auto;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px 22px;\n  max-width: 1200px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: block;\n  color: #000;\n  transform: scale(1);\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1.05);\n  }\n`;\n\nexport const FilmCard = styled.div`\n  width: 385px;\n  cursor: pointer;\n`;\n\nexport const FilmInfoWrapper = styled.div`\n  flex-direction: column;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 12px;\n`;\n\nexport const FilmTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-bottom: 3px;\n`;\n\nexport const FilmDescWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: 5px;\n  object-fit: cover;\n  width: 385px;\n  height: 574px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  getDate,\n  getPosterFilm,\n  sliceVoteAverage,\n} from '../../services/fetchApi';\nimport {\n  LinkStyled,\n  FilmCard,\n  FilmInfoWrapper,\n  FilmTitle,\n  FilmDescWrapper,\n  FilmPoster,\n  MovieList,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies = [] }) => {\n    const location = useLocation();\n\n    if (!movies) {\n        return;\n    }\n\n  return (\n    <MovieList>\n      {movies.map(({ id, poster_path, title, vote_average, release_date }) => (\n        <FilmCard key={id}>\n          <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n            <FilmPoster src={getPosterFilm(poster_path)} alt={title} />\n            <FilmInfoWrapper>\n              <FilmTitle>{title}</FilmTitle>\n              <FilmDescWrapper>\n                <p>\n                  Vote: {sliceVoteAverage(vote_average)} | {getDate(release_date)}\n                </p>\n              </FilmDescWrapper>\n            </FilmInfoWrapper>\n          </LinkStyled>\n        </FilmCard>\n      ))}\n    </MovieList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1`\n    text-align: center;\n    margin-bottom: 20px;\n`","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { HomeTitle } from './Home.styled';\n\nconst API_KEY = '579a7483bae7d6a5a25eb4c1ddded2cf';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n\n  useEffect(() => {\n    setisLoading(true);\n    const getTrendMovies = async () => {\n      try {\n        const response = await axios.get(\n          `/trending/movie/day?api_key=${API_KEY}`\n        );\n        console.log(response.data.results);\n        const moviesTrend = response.data.results;\n        setMovies(moviesTrend);\n        setisLoading(false);\n        return moviesTrend;\n      } catch (error) {\n        setisLoading(false);\n        console.log('Something went wrong in Home', error);\n      }\n    };\n    getTrendMovies();\n  }, []);\n\n  return (\n    <main>\n      {!isLoading && <section>\n        <HomeTitle>Trending a day</HomeTitle>\n        {movies.length > 0 && !isLoading && <MoviesList movies={movies} />}\n      </section>}\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '579a7483bae7d6a5a25eb4c1ddded2cf';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getFilmById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    const movieInfo = response.data;\n    console.log(response.data);\n    return movieInfo;\n  } catch (error) {\n    console.log('Error in getFilmById', error);\n  }\n};\n\nexport const getFilmByKeyword = async movie => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const searchMovie = response.data.results;\n    console.log('In getFilmByKeyword', response.data.results);\n    return searchMovie;\n  } catch (error) {\n    console.log('Error in getFilmByKeyword', error);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.log('Error in getFilmCast', error);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log('Error in getFilmReviews', error);\n  }\n};\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport function getPosterFilm(posterPath) {\n    if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n    return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\n\nexport function getGenres(genres) {\n    if (!genres) {\n      return;\n    }\n    const genresName = genres.map(genre => genre.name);\n    return genresName.join(\", \");\n}\n\nexport function sliceVoteAverage(voteAverage) {\n    const sliceVoteAverage = parseFloat(voteAverage.toFixed(1));\n    return sliceVoteAverage;\n}\n"],"names":["MovieList","styled","LinkStyled","Link","FilmCard","FilmInfoWrapper","FilmTitle","FilmDescWrapper","FilmPoster","MoviesList","movies","location","useLocation","map","id","poster_path","title","vote_average","release_date","to","state","from","src","getPosterFilm","alt","sliceVoteAverage","getDate","HomeTitle","axios","useState","setMovies","isLoading","setisLoading","useEffect","getTrendMovies","response","console","log","data","results","moviesTrend","length","Loader","API_KEY","getFilmById","movieId","movieInfo","getFilmByKeyword","movie","searchMovie","getFilmCast","cast","getFilmReviews","reviews","date","split","posterPath","getGenres","genres","genre","name","join","voteAverage","parseFloat","toFixed"],"sourceRoot":""}