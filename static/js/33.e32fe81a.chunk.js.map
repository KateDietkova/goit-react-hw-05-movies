{"version":3,"file":"static/js/33.e32fe81a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 0 0 60px 0;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 10px;\n  background-color: #93dbb2;\n  margin-bottom: 20px;\n  max-width: 110px;\n  border-radius: 4px;\n  font-weight: bold;\n  color: #000;\n`;\nexport const FilmCard = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const FilmInfoWrapper = styled.div`\n  margin-left: 20px;\n`;\n\nexport const FilmTitle = styled.h1`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: 5px;\n  object-fit: cover;\n  width: 395px;\n  height: 574px;\n`;\n\nexport const FilmInfoTitle = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const FilmInfoDesc = styled.span`\n  font-size: 15px;\n  font-weight: 400;\n`;\n\nexport const FilmInfoOverview = styled.p`\n  font-size: 15px;\n  margin-bottom: 10px;\n  font-weight: 400;\n  text-align: justify;\n  width: 450px;\n`;\n\nexport const AdditionalInfoWrapper = styled.div`\n    margin: 20px auto;\n    margin-top: 0;\n    text-align: center;\n`;\n\nexport const AdditionalInfoTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfo = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n`;\n\nexport const AdditionalItem = styled(NavLink)`\n  padding: 8px 25px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  display: block;\n  min-width: 100px;\n  background-color: lightgray;\n  transition: background-color 350ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active,\n  :hover {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { MdArrowBackIosNew } from 'react-icons/md';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  getFilmById,\n  getPosterFilm,\n  getGenres,\n  getDate,\n} from 'services/fetchApi';\nimport { Outlet } from 'react-router-dom';\nimport {\n  FilmCard,\n  FilmInfoWrapper,\n  LinkStyled,\n  FilmPoster,\n  FilmTitle,\n  FilmInfoTitle,\n  FilmInfoDesc,\n  FilmInfoOverview,\n  AdditionalInfoWrapper,\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  AdditionalItem,\n  Section,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovieInfo = async () => {\n      try {\n        const movieInfo = await getFilmById(movieId);\n        setMovie(movieInfo);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        console.log('Error in MovieDetails', error);\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  if (movie.lenght === 0) {\n    return;\n  }\n\n  const { title, poster_path, release_date, overview, genres, vote_average } =\n    movie;\n\n  return (\n    <main>\n      {!isLoading && <Section>\n        <LinkStyled to={backLinkHref}>\n          <MdArrowBackIosNew size={24} />\n          Go back\n        </LinkStyled>\n        <FilmCard>\n          <FilmPoster src={getPosterFilm(poster_path)} alt={title} />\n          <FilmInfoWrapper>\n            <FilmTitle>\n              {title} ({getDate(release_date)})\n            </FilmTitle>\n            <FilmInfoTitle>\n              User Score: <FilmInfoDesc>{vote_average}</FilmInfoDesc>\n            </FilmInfoTitle>\n            <FilmInfoTitle>Overview: </FilmInfoTitle>\n            <FilmInfoOverview>{overview}</FilmInfoOverview>\n            <FilmInfoTitle>\n              Genres: <FilmInfoDesc>{getGenres(genres)}</FilmInfoDesc>\n            </FilmInfoTitle>\n          </FilmInfoWrapper>\n        </FilmCard>\n        <AdditionalInfoWrapper>\n          <AdditionalInfoTitle>Additional infomation</AdditionalInfoTitle>\n          <AdditionalInfo>\n            <li>\n              <AdditionalItem to=\"cast\">Cast</AdditionalItem>\n            </li>\n            <li>\n              <AdditionalItem to=\"reviews\">Reviews</AdditionalItem>\n            </li>\n          </AdditionalInfo>\n        </AdditionalInfoWrapper>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Section>}\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '579a7483bae7d6a5a25eb4c1ddded2cf';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getFilmById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    const movieInfo = response.data;\n    console.log(response.data);\n    return movieInfo;\n  } catch (error) {\n    console.log('Error in getFilmById', error);\n  }\n};\n\nexport const getFilmByKeyword = async movie => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const searchMovie = response.data.results;\n    console.log('In getFilmByKeyword', response.data.results);\n    return searchMovie;\n  } catch (error) {\n    console.log('Error in getFilmByKeyword', error);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.log('Error in getFilmCast', error);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log('Error in getFilmReviews', error);\n  }\n};\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport function getPosterFilm(posterPath) {\n    if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n    return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\n\nexport function getGenres(genres) {\n    if (!genres) {\n      return;\n    }\n    const genresName = genres.map(genre => genre.name);\n    return genresName.join(\", \");\n}\n\nexport function sliceVoteAverage(voteAverage) {\n    const sliceVoteAverage = parseFloat(voteAverage.toFixed(1));\n    return sliceVoteAverage;\n}\n"],"names":["Section","styled","LinkStyled","Link","FilmCard","FilmInfoWrapper","FilmTitle","FilmPoster","FilmInfoTitle","FilmInfoDesc","FilmInfoOverview","AdditionalInfoWrapper","AdditionalInfoTitle","AdditionalInfo","AdditionalItem","NavLink","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","backLinkHref","useLocation","state","from","useEffect","getMovieInfo","getFilmById","movieInfo","console","log","lenght","title","poster_path","release_date","overview","genres","vote_average","to","size","src","getPosterFilm","alt","getDate","getGenres","Suspense","fallback","Loader","API_KEY","axios","response","data","getFilmByKeyword","searchMovie","results","getFilmCast","cast","getFilmReviews","reviews","date","split","posterPath","map","genre","name","join","sliceVoteAverage","voteAverage","parseFloat","toFixed"],"sourceRoot":""}