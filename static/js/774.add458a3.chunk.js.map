{"version":3,"file":"static/js/774.add458a3.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  display: grid;\n  justify-content: center;\n  grid-auto-rows: auto;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px 22px;\n  max-width: 1200px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  display: block;\n  color: #000;\n  transform: scale(1);\n  transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    transition: transform 350ms cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1.05);\n  }\n`;\n\nexport const FilmCard = styled.div`\n  width: 385px;\n  cursor: pointer;\n`;\n\nexport const FilmInfoWrapper = styled.div`\n  flex-direction: column;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 12px;\n`;\n\nexport const FilmTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.2;\n  text-transform: uppercase;\n  margin-bottom: 3px;\n`;\n\nexport const FilmDescWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: 5px;\n  object-fit: cover;\n  width: 385px;\n  height: 574px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  getDate,\n  getPosterFilm,\n  sliceVoteAverage,\n} from '../../services/fetchApi';\nimport {\n  LinkStyled,\n  FilmCard,\n  FilmInfoWrapper,\n  FilmTitle,\n  FilmDescWrapper,\n  FilmPoster,\n  MovieList,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies = [] }) => {\n    const location = useLocation();\n\n    if (!movies) {\n        return;\n    }\n\n  return (\n    <MovieList>\n      {movies.map(({ id, poster_path, title, vote_average, release_date }) => (\n        <FilmCard key={id}>\n          <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n            <FilmPoster src={getPosterFilm(poster_path)} alt={title} />\n            <FilmInfoWrapper>\n              <FilmTitle>{title}</FilmTitle>\n              <FilmDescWrapper>\n                <p>\n                  Vote: {sliceVoteAverage(vote_average)} | {getDate(release_date)}\n                </p>\n              </FilmDescWrapper>\n            </FilmInfoWrapper>\n          </LinkStyled>\n        </FilmCard>\n      ))}\n    </MovieList>\n  );\n};\n","import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  overflow: hidden;\n  background-color: #e3e68e;\n  padding: 10px;\n  margin-bottom: 20px;\n  box-shadow: rgba(0, 0, 0, 0.45) 0px 10px 10px -10px;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding: 8px 15px;\n  border-radius: 5px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border-radius: 5px;\n\n  :hover {\n    opacity: 1;\n  }\n\n`;\n\nexport const IconSearchStyled = styled(BsSearch)`\n  fill: currentColor;\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  button:hover & {\n    fill: orangered;\n  }\n`;\n","import { useState } from \"react\";\nimport {\n  Form,\n  Input,\n  SearchButton,\n  IconSearchStyled,\n} from './SearchBox.styled';\n\nexport const SearchBox = ({ onUpdateQuery }) => {\n    const [query, setQuery] = useState('');\n\n   const onChange = e => {\n       setQuery(e.target.value);\n    }\n    const onSubmit = e => {\n        e.preventDefault();\n        onUpdateQuery(query);\n  };\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={onChange}\n        placeholder=\"Search movie...\"\n      />\n      <SearchButton type=\"submit\">\n        <IconSearchStyled size=\"24\" />\n      </SearchButton>\n    </Form>\n  );\n};","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../components/SearchBox/SearchBox';\nimport { getFilmByKeyword } from 'services/fetchApi';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const searchMovie = query !== '' ? { query } : {};\n    setSearchParams(searchMovie);\n  };\n\n  useEffect(() => {\n    if (!movie) {\n      return;\n    }\n    setisLoading(true);\n    const getMovie = async () => {\n      try {\n        const findedMovie = await getFilmByKeyword(movie);\n        console.log('In Movies', findedMovie);\n        setMovies(findedMovie);\n        setisLoading(false);\n      } catch (error) {\n        setisLoading(false);\n        console.log('Error in Movies', error);\n      }\n    };\n    getMovie();\n  }, [movie]);\n\n  return (\n    <main>\n      <section>\n        <SearchBox onUpdateQuery={updateQueryString} />\n        {movies && !isLoading && <MoviesList movies={movies} />}\n        {isLoading && <Loader />}\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '579a7483bae7d6a5a25eb4c1ddded2cf';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const getFilmById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    const movieInfo = response.data;\n    console.log(response.data);\n    return movieInfo;\n  } catch (error) {\n    console.log('Error in getFilmById', error);\n  }\n};\n\nexport const getFilmByKeyword = async movie => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${movie}`\n    );\n    const searchMovie = response.data.results;\n    console.log('In getFilmByKeyword', response.data.results);\n    return searchMovie;\n  } catch (error) {\n    console.log('Error in getFilmByKeyword', error);\n  }\n};\n\nexport const getFilmCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.log('Error in getFilmCast', error);\n  }\n};\n\nexport const getFilmReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.log('Error in getFilmReviews', error);\n  }\n};\n\nexport function getDate(date) {\n  if (date) {\n    const year = date.split('-')[0];\n    return year;\n  }\n}\n\nexport function getPosterFilm(posterPath) {\n    if (posterPath) return `${BASE_IMG_URL}/${posterPath}`;\n    return 'https://www.jsconsulting.kz/assets/img/noImg.jpg';\n}\n\n\nexport function getGenres(genres) {\n    if (!genres) {\n      return;\n    }\n    const genresName = genres.map(genre => genre.name);\n    return genresName.join(\", \");\n}\n\nexport function sliceVoteAverage(voteAverage) {\n    const sliceVoteAverage = parseFloat(voteAverage.toFixed(1));\n    return sliceVoteAverage;\n}\n"],"names":["MovieList","styled","LinkStyled","Link","FilmCard","FilmInfoWrapper","FilmTitle","FilmDescWrapper","FilmPoster","MoviesList","movies","location","useLocation","map","id","poster_path","title","vote_average","release_date","to","state","from","src","getPosterFilm","alt","sliceVoteAverage","getDate","Form","Input","SearchButton","IconSearchStyled","BsSearch","SearchBox","onUpdateQuery","useState","query","setQuery","onSubmit","e","preventDefault","type","name","value","onChange","target","placeholder","size","setMovies","isLoading","setisLoading","useSearchParams","searchParams","setSearchParams","movie","get","useEffect","getMovie","getFilmByKeyword","findedMovie","console","log","Loader","API_KEY","axios","getFilmById","movieId","response","movieInfo","data","searchMovie","results","getFilmCast","cast","getFilmReviews","reviews","date","split","posterPath","getGenres","genres","genre","join","voteAverage","parseFloat","toFixed"],"sourceRoot":""}